{"name": "test_order_add", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <Test_Customer.Test_M04_Order.Test_M04_Order.TestCompany object at 0x000001A0C87C9400>\ndriver = <tools.ui.base_ui.BaseUI object at 0x000001A0C870F390>\n\n    @allure.story(\"新增订单\")\n    def test_order_add(self, driver):\n>       B_order.order_add(driver)\n\nTest_Customer\\Test_M04_Order\\Test_M04_Order.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <business.business_order.BusinessOrder object at 0x000001A0C7624668>\ndriver = <tools.ui.base_ui.BaseUI object at 0x000001A0C870F390>\nchannel = 'Auto_测试渠道', company = 'AutoT'\n\n    @allure.story(\"订单管理\")\n    @allure.title(\"新增订单\")\n    def order_add(self, driver, channel='Auto_测试渠道', company='AutoT'):\n        # 订单信息页\n        with allure.step(\"步骤1：点击新增订单\"):\n            driver.click(self.L_oder.order_add)\n            time.sleep(1)\n            elms = driver.get_elements(self.L_oder.order_other)\n            # 断言是否进入订单管理页\n            assert 2 == elms\n        with allure.step(\"步骤2：填写订单信息\"):\n            driver.send_keys(self.L_oder.order_channel, '{}'.format(channel))  # 选择渠道\n            driver.choose_channel()\n            driver.send_keys(self.L_oder.order_company, '{}'.format(company))  # 选择公司\n            driver.choose_channel()\n            driver.send_keys(self.L_oder.order_description, '{}'.format(\"自动化测试订单，请勿操作，谢谢。\"))  # 填写备注\n            driver.choose_channel()\n            driver.click(self.L_oder.order_next)  # 点击下一步\n            time.sleep(0.5)\n        with allure.step(\"步骤3：校验是否进入订单明细\"):  # 订单明细页\n            elms = driver.get_elements(self.L_oder.order_other)\n            assert 4 == elms  # 断言是否进入订单明细页\n        with allure.step(\"步骤4：填写订单明细\"):\n            driver.send_keys(self.L_oder.order_search, \"A-009S-1-0\")\n            driver.yy_enter()\n            driver.click(self.L_oder.order_courseAdd)\n            driver.send_keys(self.L_oder.order_courseNum, \"1\")\n            driver.send_keys(self.L_oder.order_starTime, \"2021-04-01\")\n            driver.send_keys(self.L_oder.order_overTime, \"2022-04-01\")\n            driver.click(self.L_oder.order_next)\n            time.sleep(0.5)\n        # 提交订单页\n        with allure.step(\"步骤5：校验是否进入提交订单\"):\n            # 断言是否进入提交订单页\n            elms = driver.get_elements(self.L_oder.order_other)\n>           assert 3 == elms\nE           AssertionError\n\nbusiness\\business_order.py:68: AssertionError"}, "steps": [{"name": "步骤1：点击新增订单", "status": "passed", "start": 1617809948313, "stop": 1617809950067}, {"name": "步骤2：填写订单信息", "status": "passed", "start": 1617809950067, "stop": 1617809953787}, {"name": "步骤3：校验是否进入订单明细", "status": "passed", "start": 1617809953787, "stop": 1617809953805}, {"name": "步骤4：填写订单明细", "status": "passed", "start": 1617809953805, "stop": 1617809958371}, {"name": "步骤5：校验是否进入提交订单", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"D:\\myproject\\yy_ui_bms\\business\\business_order.py\", line 68, in order_add\n    assert 3 == elms\n"}, "start": 1617809958371, "stop": 1617809958388}], "attachments": [{"name": "log", "source": "cae3d9c3-bf01-4edc-b8e7-ea87f65c4ce5-attachment.txt", "type": "text/plain"}], "start": 1617809948313, "stop": 1617809958388, "uuid": "39082841-5f4b-4a35-bb64-d60bc12544db", "historyId": "865c06842603679ab512762ebcb848ed", "testCaseId": "d06a10f173c857511513673ced3a9905", "fullName": "Test_Customer.Test_M04_Order.Test_M04_Order.TestCompany#test_order_add", "labels": [{"name": "feature", "value": "M4-订单管理"}, {"name": "story", "value": "新增订单"}, {"name": "parentSuite", "value": "Test_Customer.Test_M04_Order"}, {"name": "suite", "value": "Test_M04_Order"}, {"name": "subSuite", "value": "TestCompany"}, {"name": "host", "value": "DESKTOP-823MG95"}, {"name": "thread", "value": "9528-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_Customer.Test_M04_Order.Test_M04_Order"}]}